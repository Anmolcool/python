# NumPy Exercises 

Now that we've learned about NumPy let's test your knowledge. We'll start off with a few simple tasks, and then you'll be asked some more complicated questions.

#### Import NumPy as np

import numpy as np

np.array([1,2,3])

#### Create an array of 10 zeros 

my_list=[0,0,0,0,0,0,0,0,0,0,0,0,0]

a=my_list

np.array(a)

#### Create an array of 10 ones

my_list=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

np.array(my_list)

#### Create an array of 10 fives

np.array([5,5,5,5,5,5,5,5,5,5,5,5])

#### Create an array of the integers from 10 to 50

for num in range(10,51):
    np.array(num)

num=range(10,51)
np.array(num)



#### Create an array of all the even integers from 10 to 50

my_list=[num for num in range(10,51) if num%2==0]

np.array(my_list)

#### Create a 3x3 matrix with values ranging from 0 to 8

my_list=[num for num in range(0,9)]
print(my_list)

np.array([[0, 1, 2],[3,4,5],[6,7,8]])

#### Create a 3x3 identity matrix

np.eye(3,dtype=int)

#### Use NumPy to generate a random number between 0 and 1

np.random.rand(1)

#### Use NumPy to generate an array of 25 random numbers sampled from a standard normal distribution

np.random.randn(25)

#### Create the following matrix:

np.random.rand(10,10)

#### Create an array of 20 linearly spaced points between 0 and 1:

np.random.uniform(0,1,20)

## Numpy Indexing and Selection

Now you will be given a few matrices, and be asked to replicate the resulting matrix outputs:

np.random.uniform(5,5,25)

my_list=[num for num in range(1,26)]
print(my_list)
arr=np.array(my_list)
arr.reshape(5,5)
    



# WRITE CODE HERE THAT REPRODUCES THE OUTPUT OF THE CELL BELOW
# BE CAREFUL NOT TO RUN THE CELL BELOW, OTHERWISE YOU WON'T
# BE ABLE TO SEE THE OUTPUT ANY MORE

a=np.array([[12, 13, 14, 15],[17, 18, 19, 20],[22, 23, 24, 25]])
a



# WRITE CODE HERE THAT REPRODUCES THE OUTPUT OF THE CELL BELOW
# BE CAREFUL NOT TO RUN THE CELL BELOW, OTHERWISE YOU WON'T
# BE ABLE TO SEE THE OUTPUT ANY MORE

a=np.array([[12, 13, 14, 15],[17, 18, 19, 20],[22, 23, 24, 25]])
a

matrix=np.reshape(a, (3,4))
print(matrix)
matrix[1][3]



# WRITE CODE HERE THAT REPRODUCES THE OUTPUT OF THE CELL BELOW
# BE CAREFUL NOT TO RUN THE CELL BELOW, OTHERWISE YOU WON'T
# BE ABLE TO SEE THE OUTPUT ANY MORE

a=np.array([[2],[7],[12]])
a




# WRITE CODE HERE THAT REPRODUCES THE OUTPUT OF THE CELL BELOW
# BE CAREFUL NOT TO RUN THE CELL BELOW, OTHERWISE YOU WON'T
# BE ABLE TO SEE THE OUTPUT ANY MORE

np.array([[21,22,23,24,25]])



# WRITE CODE HERE THAT REPRODUCES THE OUTPUT OF THE CELL BELOW
# BE CAREFUL NOT TO RUN THE CELL BELOW, OTHERWISE YOU WON'T
# BE ABLE TO SEE THE OUTPUT ANY MORE

np.array([[16, 17, 18, 19, 20],[21, 22, 23, 24, 25]])



### Now do the following

#### Get the sum of all the values in mat

matrix=np.array([[116, 17, 18, 19, 20],
       [21, 22, 23, 24, 45]])
matrix_sum=np.sum(matrix)
print(matrix_sum)



#### Get the standard deviation of the values in mat

matrix=np.array([[16, 17, 18, 19, 20],
       [21, 22, 23, 24, 25]])
matrix_std=np.std(matrix)
print(matrix_std)



#### Get the sum of all the columns in mat

matrix=np.array([[16, 17, 18, 19, 20],
       [21, 22, 23, 24, 25]])
matrix_sum=np.sum(matrix,axis=0)
print(matrix_sum)

